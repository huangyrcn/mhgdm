# Letter_high Poincaré Three-Stage Training Configuration
# 完整的三阶段训练实验配置：VAE预训练 -> Score Model训练 -> Meta-test微调

# ==================== 实验标识配置 ====================
exp_name: "letter_high_poincare"
timestamp: "auto"  # 自动生成时间戳，运行时设置
run_name: "letter_high_poincare_auto"  # 实验运行名称，运行时设置
debug: false
seed: 42
device: "auto"

# ==================== 数据集配置 ====================
data:
  name: "Letter_high"
  batch_size: 128
  max_feat_num: 5
  max_node_num: 9
  test_class_num: 4  # 测试类别：[4,6,11,8]
  train_class_num: 11  # 训练类别：[1,9,10,2,0,3,14,5,12,13,7]
  test_split: 0.2

# ==================== FSL任务配置 ====================
fsl_task:
  N_way: 4  # 4个测试类别
  K_shot: 5
  R_query: 10
  max_train_meta_tasks: 10
  max_test_meta_tasks: 50
# ==================== Wandb配置 ====================
wandb:
  project: "MHGDM_LetterHigh"
  entity: "huangyr_team"
  online: false  # 设置为离线避免网络问题
  no_wandb: false
  output_dir: "logs"  # wandb 输出目录

# ==================== VAE配置 ====================
vae:
  # 编码器配置
  encoder:
    type: "HyperbolicGraphEncoder"
    manifold_type: "PoincareBall"
    layer_type: "HGAT"
    curvature: 1.0
    learnable_curvature: false
    num_layers: 3
    hidden_feature_dim: 32
    latent_feature_dim: 16
    input_feature_dim: 5
    dropout: 0.0
    aggregation_method: "sum"
    use_normalization: "ln"
  
  # 解码器配置
  decoder:
    type: "HyperbolicGraphDecoder"
    manifold_type: "PoincareBall"
    layer_type: "HGAT"
    curvature: 1.0
    learnable_curvature: false
    num_layers: 3
    hidden_feature_dim: 32
    latent_feature_dim: 16
    output_feature_dim: 5
    dropout: 0.0
    aggregation_method: "sum"
    use_normalization: "ln"
    use_centroid: false
  
  # 损失配置
  loss:
        pred_node_class: true
    pred_edge: false
    use_kl_loss: true
    use_base_proto_loss: false
    use_sep_proto_loss: false
  
  # 训练配置
  train:
    num_epochs: 200
    lr: 0.001
    lr_decay: 0.995
    lr_schedule: true
    scheduler_type: "exponential"
    weight_decay: 0.0001
    grad_norm: 1.0
    
    # 损失权重
    rec_weight: 1.0
        kl_regularization: 0.0001
    edge_weight: 0.01
    base_proto_weight: 0.0
    sep_proto_weight: 0.0
    
    # 测试间隔
    test_interval: 10
    
    # 早停配置
    enable_early_stopping: true
    early_stop_patience: 15
    early_stop_min_delta: 0.005

# ==================== Score Model配置 ====================
score:
  # X网络配置（节点特征）
  x:
    type: "ScoreNetworkX_poincare"
    manifold_type: "PoincareBall"
    depth: 3
    nhid: 32
    edge_dim: 1
    GCN_type: "HGCN"
  
  # Adj网络配置（邻接矩阵）
  adj:
    type: "ScoreNetworkA_poincare"
    manifold_type: "PoincareBall"
    nhid: 32
    num_layers: 3
    num_linears: 2
    c_init: 2
    c_hid: 8
    c_final: 4
    adim: 32
    num_heads: 4
    conv: "GCN"
  
  # SDE配置
  sde:
    x:
      type: "VP"
      beta_min: 0.1
      beta_max: 1.0
      num_scales: 1000
    adj:
      type: "VE"
      beta_min: 0.2
      beta_max: 1.0
      num_scales: 1000
  
  # 训练配置
  train:
    num_epochs: 2000
    lr: 0.0001
    lr_decay: 0.999
    lr_schedule: true
    weight_decay: 0.0001
    grad_norm: 1.0
    ema: 0.999
    
    # 测试间隔
    test_interval: 200

# ==================== Meta-test配置 ====================
meta_test:
  # 数据增强配置 - 关键参数：控制是否使用扩散模型扩充数据
  data_augmentation:
    use_diffusion_model: true  # 是否使用扩散模型进行数据扩充
    use_score_model: true      # 是否使用Score模型（扩散模型的一种实现）
    k_augment: 5               # 每个样本扩充的数量
    augment_support: true      # 是否扩充支持集
    augment_query: false       # 是否扩充查询集
  
  # 测试配置
  num_test_tasks: 5
  eval_support: true
  
  # 分类器配置
  classifier:
    epochs: 100
    lr: 0.001
    weight_decay: 0.0001
    dropout: 0.1
    bias: true
    patience: 10
  
  # 嵌入配置
  embedding:
    pooling_method: "mean_max"  # "mean", "max", "mean_max"
    normalize: false
  
  # 评估配置
  evaluation:
    confidence_interval: 0.95
    save_predictions: true
  
  # 日志配置
  logging:
    log_interval: 10

# ==================== 采样配置 ====================
sampler:
  corrector: "Langevin"
  n_steps: 1
  predictor: "Euler"
  scale_eps_A: 1.0
  scale_eps_x: 1.0
  snr_A: 0.25
  snr_x: 0.25
  proto_guide: false  # 移除 proto 条件控制
  eps: 0.0001
  noise_removal: true
  probability_flow: false
  use_ema: true

# ==================== 路径配置 ====================
# 统一的路径管理：简化路径结构，避免嵌套过深
paths:
  # 基础保存目录
  base_save_dir: "./checkpoints"
  
  # 自动生成的具体路径（训练时自动设置）
  vae_save_dir: "./checkpoints/auto/vae"
  score_save_dir: "./checkpoints/auto/score"
  
  # 检查点路径（运行时自动更新）
  vae_checkpoint: "./checkpoints/letter_high_poincare_20250627_065659/vae/best_meta_acc.pth"
  score_checkpoint: "./checkpoints/letter_high_poincare_20250627_065659/score/final.pth"

# ==================== 调试模式配置 ====================
# 可选的快速调试配置，设置debug: true时生效
debug_config:
  vae:
    train:
      num_epochs: 50
      test_interval: 5
  score:
    train:
      num_epochs: 500
      test_interval: 50
  meta_test:
    num_test_tasks: 20

# ==================== ControlNet配置 ====================
# 启用ControlNet架构进行精确数据增强
use_controlnet: true
use_finetuned_controlnet: true  # 启用任务特定微调

# ControlNet训练配置
controlnet:
  condition_dim: 16           # 条件向量维度
  learning_rate: 0.0001      # ControlNet分支学习率
  freeze_original: true      # 冻结原始Score网络
  zero_init: true           # 零初始化ControlNet输出层
  
  # 基于类别原型的条件配置
  prototype_config:
    num_classes: 4           # Letter_high数据集的类别数
    prototype_update_rate: 0.1  # 原型更新率
    use_class_prototypes: true  # 启用类别原型
    
  # 条件信号类型：使用类别原型
  condition_type: "class_prototypes"  # 选项: "class_prototypes", "graph_features", "mixed"
    
  # 增强参数
  augmentation:
    k_augment: 3            # 每个样本生成的增强数量
    noise_schedule: [0.1, 0.15, 0.2]  # 递增噪声水平
    control_strength: 1.0   # 控制信号强度
    prototype_influence: 0.8  # 类别原型的影响权重

# ==================== ControlNet微调配置 ====================
# 任务特定微调参数
controlnet_finetune_epochs: 8        # 微调轮数
controlnet_lr: 0.001                 # 微调学习率
finetune_noise_scale: 0.1            # 微调时的噪声尺度

# 数据增强配置  
k_augment_support: 4                 # 支持集增强倍数
k_augment_query: 2                   # 查询集增强倍数（如果启用）
augment_query_for_training: false    # 是否在训练分类器时也增强查询集

# ==================== 数据增强模式选择 ====================
# 可选值: 'controlnet', 'traditional', 'none'
augmentation_mode: 'controlnet' 